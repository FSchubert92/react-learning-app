{"remainingRequest":"/Users/flo/neuefische/2019-q1/learning-app/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/flo/neuefische/2019-q1/learning-app/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/flo/neuefische/2019-q1/learning-app/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/flo/neuefische/2019-q1/learning-app/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/flo/neuefische/2019-q1/learning-app/src/components/Filter.js","dependencies":[{"path":"/Users/flo/neuefische/2019-q1/learning-app/src/components/Filter.js","mtime":1551098957882},{"path":"/Users/flo/neuefische/2019-q1/learning-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/flo/neuefische/2019-q1/learning-app/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/flo/neuefische/2019-q1/learning-app/src/components/Filter.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  cursor: pointer;\\n  padding: 10px;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 10px;\\n  background: crimson;\\n  text-transform: uppercase;\\n  color: white;\\n  text-decoration: none;\\n  &:hover {\\n    background-color: grey;\\n  }\\n  &:active {\\n    background: cyan;\\n    color: black;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-auto-flow: column;\\n  grid-gap: 2px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nvar Grid = styled.section(_templateObject());\nvar Button = styled.div(_templateObject2());\n\nvar Filter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Filter, _Component);\n\n  function Filter() {\n    _classCallCheck(this, Filter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Filter).apply(this, arguments));\n  }\n\n  _createClass(Filter, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          items = _this$props.items,\n          active = _this$props.active,\n          _onClick = _this$props.onClick;\n      return React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, items.map(function (item) {\n        return React.createElement(Button, {\n          style: item === active ? {\n            background: 'hotpink'\n          } : {},\n          value: item,\n          onClick: function onClick() {\n            return _onClick(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, item);\n      }));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return Filter;\n}(Component); // Todo Geschichte nachschauen, geht in die selbe Richtung. Mit .map über das Array der Items rübergehen und so zu rendern. Mit Turnery checken ob active und dann Klasse vergeben, onClick soll dann der Filter applied werden. Bei on Click wird in das active Obkejt der jeweilige Teil aufgenommen. Damit kann man dann auch das highlighting machen.^\n\n\nFilter.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n  value: PropTypes.string,\n  onClick: PropTypes.func.isRequired\n};\nexport { Filter as default };\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Grid, \"Grid\", \"/Users/flo/neuefische/2019-q1/learning-app/src/components/Filter.js\");\n  reactHotLoader.register(Button, \"Button\", \"/Users/flo/neuefische/2019-q1/learning-app/src/components/Filter.js\");\n  reactHotLoader.register(Filter, \"Filter\", \"/Users/flo/neuefische/2019-q1/learning-app/src/components/Filter.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();\n\nFilter.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Filter\",\n  \"props\": {\n    \"items\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"string\"\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/flo/neuefische/2019-q1/learning-app/src/components/Filter.js"],"names":["React","Component","styled","PropTypes","Grid","section","Button","div","Filter","props","items","active","onClick","map","item","background","propTypes","arrayOf","string","isRequired","value","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,IAAI,GAAGF,MAAM,CAACG,OAAV,mBAAV;AAKA,IAAMC,MAAM,GAAGJ,MAAM,CAACK,GAAV,oBAAZ;;IAmBqBC,M;;;;;;;;;;;;;6BAMV;AAAA,wBAC4B,KAAKC,KADjC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,MADR,eACQA,MADR;AAAA,UACgBC,QADhB,eACgBA,OADhB;AAGP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,KAAK,CAACG,GAAN,CAAU,UAAAC,IAAI;AAAA,eACb,oBAAC,MAAD;AACE,UAAA,KAAK,EAAEA,IAAI,KAAKH,MAAT,GAAkB;AAAEI,YAAAA,UAAU,EAAE;AAAd,WAAlB,GAA8C,EADvD;AAEE,UAAA,KAAK,EAAED,IAFT;AAGE,UAAA,OAAO,EAAE;AAAA,mBAAMF,QAAO,CAACE,IAAD,CAAb;AAAA,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKGA,IALH,CADa;AAAA,OAAd,CADH,CADF;AAaD;;;;;;;;;;;EAtBiCb,S,GAyBpC;;;AAzBqBO,M,CAEdQ,S,GAAW;AAAEN,EAAAA,KAAK,EAAEP,SAAS,CAACc,OAAV,CAAkBd,SAAS,CAACe,MAA5B,EAAoCC,UAA7C;AAChBC,EAAAA,KAAK,EAAEjB,SAAS,CAACe,MADD;AAEhBN,EAAAA,OAAO,EAAET,SAAS,CAACkB,IAAV,CAAeF;AAFR,C;SAFGX,M;;;;;;;;;;0BAxBfJ,I;0BAKAE,M;0BAmBeE,M","sourcesContent":["import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst Grid = styled.section`\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: 2px;\n`\nconst Button = styled.div`\n  display: flex;\n  cursor: pointer;\n  padding: 10px;\n  align-items: center;\n  justify-content: center;\n  padding: 10px;\n  background: crimson;\n  text-transform: uppercase;\n  color: white;\n  text-decoration: none;\n  &:hover {\n    background-color: grey;\n  }\n  &:active {\n    background: cyan;\n    color: black;\n  }\n`\nexport default class Filter extends Component {\n\nstatic propTypes ={ items: PropTypes.arrayOf(PropTypes.string).isRequired,\n  value: PropTypes.string,\n  onClick: PropTypes.func.isRequired\n}\n  render() {\n    const { items, active, onClick } = this.props\n\n    return (\n      <Grid>\n        {items.map(item => (\n          <Button\n            style={item === active ? { background: 'hotpink' } : {}}\n            value={item}\n            onClick={() => onClick(item)}\n          >\n            {item}\n          </Button>\n        ))}\n      </Grid>\n    )\n  }\n}\n\n// Todo Geschichte nachschauen, geht in die selbe Richtung. Mit .map über das Array der Items rübergehen und so zu rendern. Mit Turnery checken ob active und dann Klasse vergeben, onClick soll dann der Filter applied werden. Bei on Click wird in das active Obkejt der jeweilige Teil aufgenommen. Damit kann man dann auch das highlighting machen.^\n"]}]}